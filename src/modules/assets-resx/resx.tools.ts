import * as fs from 'fs';

import { ResourceMap } from '../../models';
import { DynVariable, getWorkspaceFile } from '../../utils';
import { DinovelEvents } from '../../infra';

export const DinovelResx = new DynVariable<ResourceMap>(
  {},
  () => readResxMap(),
  DinovelEvents.resx
);

const START = 'export const GAME_RESX =';
const END = ';';

/**
 * Read current resource map from resx.map.ts file.
 *
 * @param appRoot workspace root
 * @returns Resources map
 */
export function readResxMap(appRoot?: string): ResourceMap {
  const resxFile = getWorkspaceFile('resxMap', appRoot);
  if (!fs.existsSync(resxFile)) { return {}; }

  const textContent = fs.readFileSync(resxFile, 'utf8');

  let start = textContent.indexOf(START) + START.length;
  let end = textContent.lastIndexOf(END);

  if (start < 0 || end < 0) { return {}; }

  const content = textContent.substring(start, end);
  return JSON.parse(content);
}

/**
 * Craete/udpate assets.map.ts file to the given folder.
 *
 * @param map Resources map to write
 * @param appRoot workspace root
 */
 export function writeResxMap(map: ResourceMap, appRoot?: string): void {
  const mapFile = getWorkspaceFile('resxMap', appRoot, true);
  const header = '// IMPORTANT: This file is auto-generated by dinovel. Do not edit it manually.\n\n';
  const textContent = `${header}${START} ${JSON.stringify(map, null, 2)}${END}`;
  fs.writeFileSync(mapFile, textContent, { encoding: 'utf8' });
}
